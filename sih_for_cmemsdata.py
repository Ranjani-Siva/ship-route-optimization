# -*- coding: utf-8 -*-
"""sih for cmemsdata.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19EvqDwiOGNMZszTKmYMB0AbEzXiTdzhh
"""

pip install copernicusmarine

import copernicusmarine

copernicusmarine.subset(
  dataset_id="cmems_mod_glo_wav_anfc_0.083deg_PT3H-i",
  dataset_version="202311",
  variables=["VCMX", "VHM0", "VHM0_WW", "VMDR", "VMDR_WW", "VTM01_WW", "VTPK"],
  minimum_longitude=-1.6,
  maximum_longitude=1.4,
  minimum_latitude=1.1,
  maximum_latitude=5.0,
  start_datetime="2024-01-01T00:00:00",
  end_datetime="2024-01-01T23:59:59",
  minimum_depth=0,
  maximum_depth=30,
  output_filename="CMEMS_Indian_currents_Jan2024.nc",
  output_directory="copernicus-data",
  force_download=True,
  subset_method="strict",
  disable_progress_bar=True,
)

import xarray as xr

df = xr.open_dataset('/content/copernicus-data/CMEMS_Indian_currents_Jan2024.nc')
df.head()

# The variables
for var in df.variables:
    print(var)

param_dict = {
    'VCMX': {'variable': 'Sea surface wave maximum height', 'unit': 'm'},
    'VHM0': {'variable': 'Sea surface wave significant height', 'unit': 'm'},
    'VHM0_WW': {'variable': 'Sea surface wave significant height', 'unit': 'm'},
    'VMDR': {'variable': 'Sea surface wave mean period', 'unit': 's'},
    'VMDR_WW': {'variable': 'Sea surface wave mean period', 'unit': 's'},
    'VTM01_WW': {'variable': 'Sea surface wave mean period', 'unit': 's'},
    'VTPK': {'variable': 'Sea surface wave period at variance spectral density maximum', 'unit': 's'}
}
time_dict={
    0: '00 UTC',
    1: '03 UTC',
    2: '06 UTC',
    3: '09 UTC',
    4: '12 UTC',
    5: '15 UTC',
    6: '18 UTC',
    7: '21 UTC',
}
def hide_axes(ax):
    ax.axes.get_xaxis().set_visible(False)
    ax.axes.get_yaxis().set_visible(False)

import xarray as xr
import matplotlib.pyplot as plt
import numpy as np

parameter = 'VHM0','VHM0_WW','VMDR','VMDR_WW','VTM01_WW','VTPK'
df = xr.open_dataset('/content/copernicus-data/CMEMS_Indian_currents_Jan2024.nc')
for param in parameter: # iterate over each parameter in the tuple
    fig, axes = plt.subplots(4, 2, figsize=(10, 10))
    fig.tight_layout(rect=[0, 0, 1, 0.95])  # Adjust layout for titles and colorbars
    fig.suptitle(param_dict[param]['variable'], fontsize=20)  # Main title # use param instead of parameter

    # Flatten the axes array for easier iteration
    ax_list = axes.flatten()

    for idx, ax in enumerate(ax_list):
        # Ensure idx is within the range of the time dimension
        if idx < len(df['time']):  # Check that idx does not exceed available times
            # Use isel() for better indexing and flip the data if necessary
            im = ax.imshow(np.flipud(df[param].isel(time=idx).values), extent=[0, 4320, 0, 2041]) # use param instead of parameter

            # Add title and colorbar
            ax.set_title(time_dict[idx])
            fig.colorbar(im, ax=ax, orientation='horizontal', label=f"in {param_dict[param]['unit']}", shrink=0.8) # use param instead of parameter

            # Hide axes if needed (optional function)
            ax.axis('off')
        else:
            ax.set_visible(False)  # Hide the extra axes if they exceed available data

    plt.show()

variables = list(df.variables.keys())[:]
variables

import xarray as xr
import pandas as pd

# Load the dataset (replace 'path_to_your_data.nc' with the actual path)
df = xr.open_dataset('/content/copernicus-data/CMEMS_Indian_currents_Jan2024.nc')

# List of variables you want to extract
variables_to_extract = ['VCMX', 'VHM0', 'VHM0_WW', 'VMDR', 'VMDR_WW', 'VTM01_WW', 'VTPK']

# Check if all variables are in the dataset
for var in variables_to_extract:
    if var not in df:
        print(f"Warning: {var} not found in dataset!")

# Select the required variables from the dataset
selected_df = df[variables_to_extract]

# Convert the selected variables to a pandas DataFrame
df = selected_df.to_dataframe().reset_index()

# Save the DataFrame to a CSV file
df.to_csv('selected.csv', index=False)

print("CSV file saved successfully.")

data=pd.read_csv('/content/selected.csv')
data.head()

data.to_csv('/content/drive/MyDrive/sih2024/cmemsdata.csv', index=False)